{"ast":null,"code":"var _jsxFileName = \"/Users/agwenchez/Desktop/Afya Kwanza/Super Admin Dashboard/client/src/components/new/Formik/SaccoMemberRegistration.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Grid, Button, Paper } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport Breadcrumb from '../../../layout/breadcrumb';\nimport { useHistory, withRouter } from \"react-router-dom\";\nimport Layout from \"../../AppWrapper\";\nconst api = axios.create({\n  baseURL: `http://localhost:4000`\n});\nconst validationSchema = yup.object().shape({\n  name: yup.string('Enter a name').required('Name is a required field'),\n  email: yup.string('Enter your email').email('Enter a valid email').required('Email is required'),\n  phonenumber: yup.string('Enter phone number').max(10, 'Phone number should be 10 characters max').required('Phone number is a required field'),\n  sacco: yup.string('Select a sacco').required('Sacco is a required field'),\n  location: yup.string('Enter location').required('Location is a required field'),\n  insurance_plan: yup.string('Enter insurance plan').required('Insurance plan is a required field')\n});\nconst saccos = [{\n  value: 'None'\n}, {\n  value: 'Latema'\n}, {\n  value: 'Killeton'\n}, {\n  value: 'Indimanje'\n}, {\n  value: 'Kihomi'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    // flexWrap: 'no-wrap',\n    // marginTop: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(10),\n    borderRadius: '10px',\n    backgroundColor: 'white'\n  },\n  textField: {\n    marginLeft: theme.spacing(8),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"85%\"\n    },\n    width: '45ch'\n  },\n  div: {\n    // display:'flex'\n    textAlign: 'right'\n  },\n  button: {\n    margin: theme.spacing(1),\n    color: 'black',\n    backgroundColor: '#313F9F',\n    border: '1px solid black',\n    borderRadius: '10px',\n    marginTop: '20%'\n  },\n  form: {\n    paddingTop: theme.spacing(4)\n  }\n}));\n\nconst SaccoMemberRegistration = () => {\n  const classes = useStyles();\n  const [data, setData] = useState({});\n  useEffect(() => {\n    api.get('/saccos/all').then(res => {\n      console.log(\"data =>\", res.data); // const data = res.json(res)\n\n      setData(res.data);\n      console.log(\"saccos from server=>\", data);\n    }).catch(error => {\n      console.log(\"Error\", error);\n    });\n  }, []);\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      phonenumber: '',\n      sacco: '',\n      location: '',\n      insurance_plan: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      try {\n        setSubmitting(true);\n        const response = await api.post('/members/add', values);\n        console.log(\"response object\", response);\n        toast.success(response.data);\n        resetForm();\n      } catch (error) {\n        console.log(\"Some error occured=>\", error.message);\n        console.log(\"error status=>\", error.status);\n        alert(error); // resetForm()\n      }\n    }\n  }); //   console.log(\"here are the mf values=>\", formik.values);\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Members\",\n    title: \"Sacco Member Registration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    name: \"name\",\n    label: \"NAME\",\n    className: classes.textField,\n    placeholder: \"Enter name\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    size: \"small\",\n    variant: \"outlined\",\n    value: formik.values.name,\n    onChange: formik.handleChange,\n    error: formik.touched.name && Boolean(formik.errors.name),\n    helperText: formik.touched.name && formik.errors.name,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"EMAIL\",\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    error: formik.touched.email && Boolean(formik.errors.email),\n    helperText: formik.touched.email && formik.errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"PHONE NUMBER\",\n    id: \"phonenumber\",\n    name: \"phonenumber\",\n    placeholder: \"Phone Number\",\n    style: {\n      marginTop: '2.3ch'\n    },\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.phonenumber,\n    onChange: formik.handleChange,\n    error: formik.touched.phonenumber && Boolean(formik.errors.phonenumber),\n    helperText: formik.touched.phonenumber && formik.errors.phonenumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"sacco\",\n    name: \"sacco\",\n    select: true,\n    label: \"Sacco\",\n    className: classes.textField,\n    value: saccos,\n    style: {\n      marginTop: '2.3ch'\n    },\n    SelectProps: {\n      native: true\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    size: \"small\",\n    value: formik.values.sacco,\n    onChange: formik.handleChange,\n    error: formik.touched.sacco && Boolean(formik.errors.sacco),\n    helperText: formik.touched.sacco && formik.errors.sacco,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 41\n    }\n  }, saccos.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 49\n    }\n  }, option.value))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"LOCATION\",\n    id: \"location\",\n    name: \"location\",\n    placeholder: \"Location\",\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.location,\n    onChange: formik.handleChange,\n    error: formik.touched.location && Boolean(formik.errors.location),\n    helperText: formik.touched.location && formik.errors.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"INSURANCE PLAN\",\n    id: \"insurance_plan\",\n    name: \"insurance_plan\",\n    placeholder: \"Insurance plan\",\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.insurance_plan,\n    onChange: formik.handleChange,\n    error: formik.touched.insurance_plan && Boolean(formik.errors.insurance_plan),\n    helperText: formik.touched.insurance_plan && formik.errors.insurance_plan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      width: '86%',\n      margin: '0 7%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: formik.isSubmitting,\n    size: \"medium\",\n    variant: \"raised\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 45\n    }\n  }, \"Submit\"))))))))));\n};\n\nexport default SaccoMemberRegistration;","map":{"version":3,"sources":["/Users/agwenchez/Desktop/Afya Kwanza/Super Admin Dashboard/client/src/components/new/Formik/SaccoMemberRegistration.jsx"],"names":["React","useEffect","useState","makeStyles","TextField","Grid","Button","Paper","useFormik","yup","axios","toast","Breadcrumb","useHistory","withRouter","Layout","api","create","baseURL","validationSchema","object","shape","name","string","required","email","phonenumber","max","sacco","location","insurance_plan","saccos","value","useStyles","theme","root","display","paddingTop","spacing","paddingBottom","borderRadius","backgroundColor","textField","marginLeft","marginRight","breakpoints","down","width","div","textAlign","button","margin","color","border","marginTop","form","SaccoMemberRegistration","classes","data","setData","get","then","res","console","log","catch","error","formik","initialValues","onSubmit","values","setSubmitting","resetForm","response","post","success","message","status","alert","handleSubmit","shrink","handleChange","touched","Boolean","errors","native","map","option","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Grid, Button, Paper } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport Breadcrumb from '../../../layout/breadcrumb';\nimport { useHistory, withRouter } from \"react-router-dom\";\nimport Layout from \"../../AppWrapper\"\n\n\nconst api = axios.create({\n    baseURL: `http://localhost:4000`\n})\n\n\nconst validationSchema = yup.object().shape({\n    name: yup\n        .string('Enter a name')\n        .required('Name is a required field'),\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    phonenumber: yup\n        .string('Enter phone number')\n        .max(10, 'Phone number should be 10 characters max')\n        .required('Phone number is a required field'),\n    sacco: yup\n        .string('Select a sacco')\n        .required('Sacco is a required field'),\n    location: yup\n        .string('Enter location')\n        .required('Location is a required field'),\n    insurance_plan: yup\n        .string('Enter insurance plan')\n        .required('Insurance plan is a required field')\n});\n\nconst saccos = [\n    {\n        value: 'None'\n    },\n    {\n        value: 'Latema'\n    },\n    {\n        value: 'Killeton'\n    },\n    {\n        value: 'Indimanje'\n    },\n    {\n        value: 'Kihomi'\n    },\n];\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        // flexWrap: 'no-wrap',\n        // marginTop: theme.spacing(3),\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(10),\n        borderRadius: '10px',\n        backgroundColor: 'white'\n    },\n    textField: {\n        marginLeft: theme.spacing(8),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: \"85%\"\n        },\n        width: '45ch',\n    },\n    div: {\n        // display:'flex'\n        textAlign: 'right'\n    },\n    button: {\n        margin: theme.spacing(1),\n        color: 'black',\n        backgroundColor: '#313F9F',\n        border: '1px solid black',\n        borderRadius: '10px',\n        marginTop: '20%'\n    },\n    form: {\n        paddingTop: theme.spacing(4)\n    }\n}))\n\n\n\nconst SaccoMemberRegistration = () => {\n    const classes = useStyles();\n    const [data, setData] = useState({});\n\n    useEffect(() => {\n        api.get('/saccos/all')\n            .then(res => {\n                console.log(\"data =>\", res.data)\n                // const data = res.json(res)\n                setData(res.data)\n                console.log(\"saccos from server=>\", data)\n            }\n            ).catch(error => {\n                console.log(\"Error\", error)\n            })\n    }, [])\n\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            email: '',\n            phonenumber: '',\n            sacco: '',\n            location: '',\n            insurance_plan: ''\n        },\n        validationSchema: validationSchema,\n        onSubmit: async (values, { setSubmitting, resetForm }) => {\n\n            try {\n                setSubmitting(true);\n                const response = await api.post('/members/add', values)\n                console.log(\"response object\", response)\n                toast.success(response.data)\n                resetForm()\n            } catch (error) {\n                console.log(\"Some error occured=>\", error.message)\n                console.log(\"error status=>\", error.status)\n                alert(error)\n                // resetForm()\n            }\n\n        },\n    });\n\n\n    //   console.log(\"here are the mf values=>\", formik.values);\n    return (\n        <Layout>\n            <>\n                <Grid item xs=\"12\">\n                    <Breadcrumb parent=\"Members\" title=\"Sacco Member Registration\" />\n                </Grid>\n                <div className={classes.root}>\n                    <Grid container spacing={3}>\n                        <Grid item xs=\"12\">\n                            <form onSubmit={formik.handleSubmit} className={classes.form}>\n                                <Grid container spacing={3}>\n                                    <Grid item xs=\"12\" sm=\"6\">\n                                        <TextField\n                                            id=\"name\"\n                                            name=\"name\"\n                                            label=\"NAME\"\n                                            className={classes.textField}\n                                            placeholder=\"Enter name\"\n                                            margin=\"normal\"\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                            value={formik.values.name}\n                                            onChange={formik.handleChange}\n                                            error={formik.touched.name && Boolean(formik.errors.name)}\n                                            helperText={formik.touched.name && formik.errors.name}\n                                            autoFocus\n                                        />\n\n                                    </Grid>\n                                    <Grid item xs=\"12\" sm=\"6\">\n                                        <TextField\n                                            label=\"EMAIL\"\n                                            id=\"email\"\n                                            name=\"email\"\n                                            placeholder=\"Email\"\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            size=\"small\"\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            variant=\"outlined\"\n                                            value={formik.values.email}\n                                            onChange={formik.handleChange}\n                                            error={formik.touched.email && Boolean(formik.errors.email)}\n                                            helperText={formik.touched.email && formik.errors.email}\n                                        />\n                                    </Grid>\n\n                                </Grid>\n                                <Grid container spacing={3}>\n                                    <Grid item xs=\"12\" sm=\"6\">\n                                        <TextField\n                                            label=\"PHONE NUMBER\"\n                                            id=\"phonenumber\"\n                                            name=\"phonenumber\"\n                                            placeholder=\"Phone Number\"\n                                            style={{ marginTop: '2.3ch' }}\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            size=\"small\"\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            variant=\"outlined\"\n                                            value={formik.values.phonenumber}\n                                            onChange={formik.handleChange}\n                                            error={formik.touched.phonenumber && Boolean(formik.errors.phonenumber)}\n                                            helperText={formik.touched.phonenumber && formik.errors.phonenumber}\n                                        />\n                                    </Grid>\n                                    <Grid item xs=\"12\" sm=\"6\">\n                                        <TextField\n                                            id=\"sacco\"\n                                            name=\"sacco\"\n                                            select\n                                            label=\"Sacco\"\n                                            className={classes.textField}\n                                            value={saccos}\n                                            style={{ marginTop: '2.3ch' }}\n                                            SelectProps={{\n                                                native: true,\n                                            }}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            size=\"small\"\n                                            value={formik.values.sacco}\n                                            onChange={formik.handleChange}\n                                            error={formik.touched.sacco && Boolean(formik.errors.sacco)}\n                                            helperText={formik.touched.sacco && formik.errors.sacco}\n                                            variant=\"outlined\"\n                                        >\n\n                                            {saccos.map((option) => (\n                                                <option key={option.value} value={option.value}>\n                                                    {option.value}\n                                                </option>\n                                            ))}\n\n                                        </TextField>\n                                    </Grid>\n\n                                </Grid>\n                                <Grid container spacing={3}>\n                                    <Grid item xs>\n                                        <TextField\n                                            label=\"LOCATION\"\n                                            id=\"location\"\n                                            name=\"location\"\n                                            placeholder=\"Location\"\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            size=\"small\"\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            variant=\"outlined\"\n                                            value={formik.values.location}\n                                            onChange={formik.handleChange}\n                                            error={formik.touched.location && Boolean(formik.errors.location)}\n                                            helperText={formik.touched.location && formik.errors.location}\n                                        />\n                                    </Grid>\n                                    <Grid item xs>\n                                        <TextField\n                                            label=\"INSURANCE PLAN\"\n                                            id=\"insurance_plan\"\n                                            name=\"insurance_plan\"\n                                            placeholder=\"Insurance plan\"\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            size=\"small\"\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            variant=\"outlined\"\n                                            value={formik.values.insurance_plan}\n                                            onChange={formik.handleChange}\n                                            error={formik.touched.insurance_plan && Boolean(formik.errors.insurance_plan)}\n                                            helperText={formik.touched.insurance_plan && formik.errors.insurance_plan}\n                                        />\n                                    </Grid>\n\n                                </Grid>\n                                {/* <Button\n                        type=\"button\"\n                        className=\"outline\"\n                        onClick={formik.handleReset}\n                        disabled={!formik.dirty || formik.isSubmitting}\n                    >\n                    Reset\n                    </Button> */}\n                                <Grid container style={{ width: '86%', margin: '0 7%' }}>\n                                    <Grid item xs=\"3\"></Grid>\n                                    <Grid item xs=\"3\"></Grid>\n                                    <Grid item xs=\"3\"></Grid>\n                                    <Grid item xs=\"3\">\n\n                                        <div className={classes.div}>\n                                            <Button type=\"submit\" disabled={formik.isSubmitting} size=\"medium\" variant=\"raised\" className={classes.button}>\n                                                Submit\n                            </Button>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Grid>\n                    </Grid>\n\n                </div>\n            </>\n        </Layout>\n    );\n}\n\nexport default SaccoMemberRegistration;"]},"metadata":{},"sourceType":"module"}