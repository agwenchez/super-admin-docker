{"ast":null,"code":"var _jsxFileName = \"/Users/agwenchez/Desktop/Afya Kwanza/Admin Dashboard/client/src/components/app.jsx\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Layout from \"./AppWrapper\";\nimport { ToastContainer } from 'react-toastify';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Dashboard from \"../components/dashboard/dashboard\";\nimport Login from \"../components/new/Login\";\nimport Members from \"../components/new/MembersTable\";\nimport Saccos from \"../components/new/SaccoTable\";\nimport MembersRegistration from \"../components/new/Formik/SaccoMemberRegistration\";\nimport SaccoRegistration from \"../components/new/Formik/SaccoRegistration\";\n\nconst App = () => {\n  const [name, setName] = useState(\"\");\n\n  const getProfile = async () => {\n    console.log(\"Stored token=>\", localStorage.tokenated);\n\n    try {\n      const res = await fetch(\"http://localhost:4000/admin/\", {\n        method: \"POST\",\n        headers: {\n          jwt_token: localStorage.tokenated\n        }\n      });\n      const data = await res.json();\n      console.log(\"data from server==>\", data);\n      setName(data.name);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n  console.log(\"Name from server==>\", name);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard\",\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard/saccos\",\n    component: Saccos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard/members\",\n    component: Members,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard/members/new\",\n    component: MembersRegistration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard/saccos/new\",\n    component: SaccoRegistration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/agwenchez/Desktop/Afya Kwanza/Admin Dashboard/client/src/components/app.jsx"],"names":["React","Fragment","useEffect","useState","Layout","ToastContainer","BrowserRouter","Router","Route","Switch","Redirect","Dashboard","Login","Members","Saccos","MembersRegistration","SaccoRegistration","App","name","setName","getProfile","console","log","localStorage","tokenated","res","fetch","method","headers","jwt_token","data","json","err","error","message"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport Layout from \"./AppWrapper\"\nimport {ToastContainer} from 'react-toastify';\nimport { BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport Dashboard from \"../components/dashboard/dashboard\"\nimport Login from \"../components/new/Login\"\nimport Members from \"../components/new/MembersTable\"\nimport Saccos from \"../components/new/SaccoTable\"\nimport MembersRegistration from \"../components/new/Formik/SaccoMemberRegistration\"\nimport SaccoRegistration from \"../components/new/Formik/SaccoRegistration\"\n\n\n\nconst App = () => {\n  const [name, setName] = useState(\"\")\n\n  const getProfile = async () => {\n    console.log(\"Stored token=>\", localStorage.tokenated)\n    try {\n      const res = await fetch(\"http://localhost:4000/admin/\", {\n        method: \"POST\",\n        headers: { jwt_token: localStorage.tokenated }\n      });\n  \n      const data = await res.json();\n      console.log(\"data from server==>\", data)\n      setName(data.name);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    \n    getProfile()\n\n  }, [])\n\n  console.log(\"Name from server==>\", name)\n\n  return (\n    <Fragment>\n      {/* <Layout /> */}\n\n      <Router>\n        <Switch>\n          <Route exact path='/login' component={Login}/> \n          <Route exact path='/dashboard' component={Dashboard}/> \n          <Route exact path='/dashboard/saccos' component={Saccos}/> \n          <Route exact path='/dashboard/members' component={Members}/> \n          <Route exact path='/dashboard/members/new' component={MembersRegistration}/> \n          <Route exact path='/dashboard/saccos/new' component={SaccoRegistration}/> \n        </Switch>\n      </Router>\n      <ToastContainer/>\n    </Fragment>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}