{"ast":null,"code":"var _jsxFileName = \"/Users/agwenchez/Desktop/Afya Kwanza/Admin Dashboard/client/src/components/new/Formik/SaccoRegistration.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Grid, Button, Paper } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport Breadcrumb from '../../../layout/breadcrumb';\nconst api = axios.create({\n  baseURL: `http://localhost:4000`\n});\nconst validationSchema = yup.object().shape({\n  name: yup.string('Enter a name').required('Name is a required field'),\n  email: yup.string('Enter a sacco email').email('Enter a valid email').required('Email is required'),\n  admin_name: yup.string('Enter Admin Name').max(30, 'Admin name should be 30 characters max').required('Amin Name is a required field'),\n  admin_password: yup.string('Enter an admin password').required('Admin password is a required field')\n});\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    paddingTop: theme.spacing(10),\n    paddingBottom: theme.spacing(10),\n    borderRadius: '15px',\n    backgroundColor: 'white'\n  },\n  textField: {\n    marginLeft: theme.spacing(8),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"85%\"\n    },\n    width: '45ch'\n  },\n  div: {\n    // display:'flex'\n    textAlign: 'right'\n  },\n  button: {\n    margin: theme.spacing(1),\n    color: 'black',\n    backgroundColor: '#313F9F',\n    border: '1px solid black',\n    borderRadius: '10px',\n    marginTop: '20%'\n  },\n  form: {\n    paddingTop: theme.spacing(4)\n  }\n}));\nexport default function SaccoRegistration() {\n  const classes = useStyles(); // const [data, setData] = React.useState({});\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      admin_name: '',\n      admin_password: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      try {\n        setSubmitting(true);\n        const response = await api.post('/saccos/add', values); //  const res = JSON.parse(response);\n\n        console.log(\"response object=>\", response.status);\n        toast.success(response.data);\n        resetForm();\n      } catch (error) {\n        console.log(\"Some error occured=>\", error);\n        toast.error(error); // resetForm()\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Saccos\",\n    title: \"Sacco Registration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    name: \"name\",\n    label: \"NAME\",\n    className: classes.textField,\n    placeholder: \"Enter sacco name\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    size: \"small\",\n    variant: \"outlined\",\n    value: formik.values.name,\n    onChange: formik.handleChange,\n    error: formik.touched.name && Boolean(formik.errors.name),\n    helperText: formik.touched.name && formik.errors.name,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"EMAIL\",\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"Enter sacco email\",\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    error: formik.touched.sacoo_email && Boolean(formik.errors.email),\n    helperText: formik.touched.email && formik.errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"ADMIN NAME\",\n    id: \"admin_name\",\n    name: \"admin_name\",\n    placeholder: \"Enter Admin name\",\n    style: {\n      marginTop: '2.3ch'\n    },\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.admin_name,\n    onChange: formik.handleChange,\n    error: formik.touched.admin_name && Boolean(formik.errors.admin_name),\n    helperText: formik.touched.admin_name && formik.errors.admin_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"ADMIN PASSWORD\",\n    id: \"admin_password\",\n    name: \"admin_password\",\n    placeholder: \"Enter Admin password\",\n    style: {\n      marginTop: '2.3ch'\n    },\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.admin_password,\n    onChange: formik.handleChange,\n    error: formik.touched.admin_password && Boolean(formik.errors.admin_password),\n    helperText: formik.touched.admin_password && formik.errors.admin_password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      width: '86%',\n      margin: '0 7%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: formik.isSubmitting,\n    size: \"medium\",\n    variant: \"raised\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, \"Submit\"))))))));\n}","map":{"version":3,"sources":["/Users/agwenchez/Desktop/Afya Kwanza/Admin Dashboard/client/src/components/new/Formik/SaccoRegistration.jsx"],"names":["React","makeStyles","TextField","Grid","Button","Paper","useFormik","yup","axios","toast","Breadcrumb","api","create","baseURL","validationSchema","object","shape","name","string","required","email","admin_name","max","admin_password","useStyles","theme","root","display","paddingTop","spacing","paddingBottom","borderRadius","backgroundColor","textField","marginLeft","marginRight","breakpoints","down","width","div","textAlign","button","margin","color","border","marginTop","form","SaccoRegistration","classes","formik","initialValues","onSubmit","values","setSubmitting","resetForm","response","post","console","log","status","success","data","error","handleSubmit","shrink","handleChange","touched","Boolean","errors","sacoo_email","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Grid,Button,Paper} from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport Breadcrumb from '../../../layout/breadcrumb';\n\n\nconst api = axios.create({\n    baseURL: `http://localhost:4000`\n  })\n  \n\nconst validationSchema = yup.object().shape({\n    name: yup\n      .string('Enter a name')\n      .required('Name is a required field'),\n    email: yup\n      .string('Enter a sacco email')\n      .email('Enter a valid email')\n      .required('Email is required'),\n    admin_name: yup\n      .string('Enter Admin Name')\n      .max(30, 'Admin name should be 30 characters max')\n      .required('Amin Name is a required field'),\n    admin_password:yup\n        .string('Enter an admin password')\n        .required('Admin password is a required field')\n  });\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        paddingTop: theme.spacing(10),\n        paddingBottom: theme.spacing(10),\n        borderRadius:'15px',\n        backgroundColor:'white',\n    },\n    textField: {\n        marginLeft: theme.spacing(8),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width:\"85%\"\n          },\n        width: '45ch',\n    },\n    div:{\n        // display:'flex'\n        textAlign: 'right'\n    },\n    button: {\n        margin: theme.spacing(1),\n        color:'black',\n        backgroundColor:'#313F9F',\n        border: '1px solid black',\n        borderRadius:'10px',\n        marginTop:'20%'\n      },\n    form:{\n        paddingTop: theme.spacing(4)\n    }\n}));\n\nexport default function SaccoRegistration() {\n    const classes = useStyles();\n    // const [data, setData] = React.useState({});\n\n    const formik = useFormik({\n        initialValues: {\n          name:'',\n          email: '',\n          admin_name:'',\n          admin_password:''\n        },\n        validationSchema: validationSchema,\n        onSubmit:async (values,{setSubmitting,resetForm}) => {\n        try {\n        setSubmitting(true);\n         const response = await api.post('/saccos/add', values)\n        //  const res = JSON.parse(response);\n         console.log(\"response object=>\", response.status)\n         toast.success(response.data)\n         resetForm()\n        } catch (error) {\n            console.log(\"Some error occured=>\",error)\n            toast.error(error)\n            // resetForm()\n        }\n\n        },\n      });\n\n    \n    return (\n        <div className={classes.root}>\n            <Grid container  spacing={3} >\n                <Grid item xs=\"12\">\n                    <Breadcrumb parent=\"Saccos\" title=\"Sacco Registration\"/>\n                </Grid>\n                <Grid item xs=\"12\">\n                <form onSubmit={formik.handleSubmit} className={classes.form}>\n                    <Grid container spacing={3}>\n                        <Grid item xs=\"12\" sm=\"6\">\n                        <TextField\n                            id=\"name\"\n                            name=\"name\"\n                            label=\"NAME\"\n                            className={classes.textField}\n                            placeholder=\"Enter sacco name\"\n                            margin=\"normal\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            value={formik.values.name}\n                            onChange={formik.handleChange}\n                            error={formik.touched.name && Boolean(formik.errors.name)}\n                            helperText={formik.touched.name && formik.errors.name}\n                            autoFocus\n                        />\n                    \n                        </Grid>\n                        <Grid item xs=\"12\" sm=\"6\">\n                        <TextField\n                            label=\"EMAIL\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Enter sacco email\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            size=\"small\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            value={formik.values.email}\n                            onChange={formik.handleChange}\n                            error={formik.touched.sacoo_email && Boolean(formik.errors.email)}\n                            helperText={formik.touched.email && formik.errors.email}\n                        />\n                        </Grid>\n                    \n                    </Grid>\n                    <Grid container spacing={3}>\n                        <Grid item xs=\"12\" sm=\"6\">\n                        <TextField\n                            label=\"ADMIN NAME\"\n                            id=\"admin_name\"\n                            name=\"admin_name\"\n                            placeholder=\"Enter Admin name\"\n                            style={{ marginTop:'2.3ch'}}\n                            className={classes.textField}\n                            margin=\"normal\"\n                            size=\"small\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            value={formik.values.admin_name}\n                            onChange={formik.handleChange}\n                            error={formik.touched.admin_name && Boolean(formik.errors.admin_name)}\n                            helperText={formik.touched.admin_name && formik.errors.admin_name}\n                        />\n                        </Grid>\n                        <Grid item xs=\"12\" sm=\"6\">\n                        <TextField\n                            label=\"ADMIN PASSWORD\"\n                            id=\"admin_password\"\n                            name=\"admin_password\"\n                            placeholder=\"Enter Admin password\"\n                            style={{ marginTop:'2.3ch'}}\n                            className={classes.textField}\n                            margin=\"normal\"\n                            size=\"small\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            value={formik.values.admin_password}\n                            onChange={formik.handleChange}\n                            error={formik.touched.admin_password && Boolean(formik.errors.admin_password)}\n                            helperText={formik.touched.admin_password && formik.errors.admin_password}\n                        />\n                        </Grid>\n                    \n                    </Grid>\n                    {/* <Grid container spacing={3}>\n                        <Grid item xs>\n                        <TextField\n                            label=\"INSURANCE COVER\"\n                            id=\"insurance_cover\"\n                            name=\"insurance_cover\"\n                            placeholder=\"Insurance cover\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            size=\"small\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            value={formik.values.insurance_cover}\n                            onChange={formik.handleChange}\n                            error={formik.touched.insurance_cover && Boolean(formik.errors.insurance_cover)}\n                            helperText={formik.touched.insurance_cover && formik.errors.insurance_cover}\n                        />\n                        </Grid>\n                        <Grid item xs>\n                        <TextField\n                            id=\"sacco\"\n                            name=\"sacco\"\n                            select\n                            label=\"Sacco\"\n                            className={classes.textField}\n                            value={saccos}\n                            style={{ marginTop:'1.8ch'}}\n                            SelectProps={{\n                                native: true,\n                            }}\n                            size=\"small\"\n                            value={formik.values.sacco}\n                            onChange={formik.handleChange}\n                            error={formik.touched.sacco && Boolean(formik.errors.sacco)}\n                            helperText={formik.touched.sacco && formik.errors.sacco}\n                            variant=\"outlined\"\n                            >\n                            \n                            {saccos.map((option) => (\n                                <option key={option.value} value={option.value}>\n                                {option.value}\n                                </option>\n                            ))}\n                            \n                        </TextField>\n                        </Grid>\n                    \n                    </Grid> */}\n                    {/* <Button\n                        type=\"button\"\n                        className=\"outline\"\n                        onClick={formik.handleReset}\n                        disabled={!formik.dirty || formik.isSubmitting}\n                    >\n                    Reset\n                    </Button> */}\n                    <Grid container style={{width: '86%', margin: '0 7%'}}>\n                        <Grid item xs=\"3\"></Grid>\n                        <Grid item xs=\"3\"></Grid>\n                        <Grid item xs=\"3\"></Grid>\n                        <Grid item xs=\"3\">\n                       \n                        <div className={classes.div}>\n                            <Button type=\"submit\" disabled={formik.isSubmitting} size=\"medium\" variant=\"raised\" className={classes.button}>\n                                Submit\n                            </Button>\n                        </div>\n                        </Grid>\n                    </Grid>\n                </form>\n                </Grid>\n            </Grid>\n           \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}