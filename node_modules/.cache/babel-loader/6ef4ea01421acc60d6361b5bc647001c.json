{"ast":null,"code":"var _jsxFileName = \"/Users/agwenchez/Desktop/Afya Kwanza/Admin Dashboard/client/src/components/new/Formik/SaccoMemberRegistration.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Grid, Button, Paper } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport Breadcrumb from '../../../layout/breadcrumb';\nconst api = axios.create({\n  baseURL: `http://localhost:4000`\n});\nconst validationSchema = yup.object().shape({\n  name: yup.string('Enter a name').required('Name is a required field'),\n  email: yup.string('Enter your email').email('Enter a valid email').required('Email is required'),\n  phonenumber: yup.string('Enter phone number').max(10, 'Phone number should be 10 characters max').required('Phone number is a required field'),\n  sacco: yup.string('Select a sacco').required('Sacco is a required field')\n});\nconst saccos = [{\n  value: 'None'\n}, {\n  value: 'Latema'\n}, {\n  value: 'Killeton'\n}, {\n  value: 'Indimanje'\n}, {\n  value: 'Kihomi'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    // flexWrap: 'no-wrap',\n    // marginTop: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(10),\n    borderRadius: '10px',\n    backgroundColor: 'white'\n  },\n  textField: {\n    marginLeft: theme.spacing(8),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"85%\"\n    },\n    width: '45ch'\n  },\n  div: {\n    // display:'flex'\n    textAlign: 'right'\n  },\n  button: {\n    margin: theme.spacing(1),\n    color: 'black',\n    backgroundColor: '#313F9F',\n    border: '1px solid black',\n    borderRadius: '10px',\n    marginTop: '20%'\n  },\n  form: {\n    paddingTop: theme.spacing(4)\n  }\n}));\nexport default function SaccoMemberRegistration() {\n  const classes = useStyles(); // const [data, setData] = React.useState({});\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      phonenumber: '',\n      sacco: '',\n      location: '',\n      insurance_plan: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      try {\n        setSubmitting(true);\n        const response = await api.post('/members/add', values);\n        console.log(\"response object\", response);\n        toast.success(response.data);\n        resetForm();\n      } catch (error) {\n        console.log(\"Some error occured=>\", error.message);\n        console.log(\"error status=>\", error.status);\n        alert(error); // resetForm()\n      }\n    }\n  }); //   console.log(\"here are the mf values=>\", formik.values);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Members\",\n    title: \"Sacco Member Registration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    name: \"name\",\n    label: \"NAME\",\n    className: classes.textField,\n    placeholder: \"Enter name\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    size: \"small\",\n    variant: \"outlined\",\n    value: formik.values.name,\n    onChange: formik.handleChange,\n    error: formik.touched.name && Boolean(formik.errors.name),\n    helperText: formik.touched.name && formik.errors.name,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"EMAIL\",\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    error: formik.touched.email && Boolean(formik.errors.email),\n    helperText: formik.touched.email && formik.errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"PHONE NUMBER\",\n    id: \"phonenumber\",\n    name: \"phonenumber\",\n    placeholder: \"Phone Number\",\n    style: {\n      marginTop: '2.3ch'\n    },\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.phonenumber,\n    onChange: formik.handleChange,\n    error: formik.touched.phonenumber && Boolean(formik.errors.phonenumber),\n    helperText: formik.touched.phonenumber && formik.errors.phonenumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"sacco\",\n    name: \"sacco\",\n    select: true,\n    label: \"Sacco\",\n    className: classes.textField,\n    value: saccos,\n    style: {\n      marginTop: '2.3ch'\n    },\n    SelectProps: {\n      native: true\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    size: \"small\",\n    value: formik.values.sacco,\n    onChange: formik.handleChange,\n    error: formik.touched.sacco && Boolean(formik.errors.sacco),\n    helperText: formik.touched.sacco && formik.errors.sacco,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, saccos.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 33\n    }\n  }, option.value))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"INSURANCE PLAN\",\n    id: \"location\",\n    name: \"location\",\n    placeholder: \"Insurance plan\",\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.location,\n    onChange: formik.handleChange,\n    error: formik.touched.location && Boolean(formik.errors.location),\n    helperText: formik.touched.location && formik.errors.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"INSURANCE PLAN\",\n    id: \"insurance_plan\",\n    name: \"insurance_plan\",\n    placeholder: \"Insurance plan\",\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.insurance_plan,\n    onChange: formik.handleChange,\n    error: formik.touched.insurance_plan && Boolean(formik.errors.insurance_plan),\n    helperText: formik.touched.insurance_plan && formik.errors.insurance_plan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 26\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      width: '86%',\n      margin: '0 7%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: formik.isSubmitting,\n    size: \"medium\",\n    variant: \"raised\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 29\n    }\n  }, \"Submit\"))))))));\n}","map":{"version":3,"sources":["/Users/agwenchez/Desktop/Afya Kwanza/Admin Dashboard/client/src/components/new/Formik/SaccoMemberRegistration.jsx"],"names":["React","makeStyles","TextField","Grid","Button","Paper","useFormik","yup","axios","toast","Breadcrumb","api","create","baseURL","validationSchema","object","shape","name","string","required","email","phonenumber","max","sacco","saccos","value","useStyles","theme","root","display","paddingTop","spacing","paddingBottom","borderRadius","backgroundColor","textField","marginLeft","marginRight","breakpoints","down","width","div","textAlign","button","margin","color","border","marginTop","form","SaccoMemberRegistration","classes","formik","initialValues","location","insurance_plan","onSubmit","values","setSubmitting","resetForm","response","post","console","log","success","data","error","message","status","alert","handleSubmit","shrink","handleChange","touched","Boolean","errors","native","map","option","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Grid,Button,Paper} from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport Breadcrumb from '../../../layout/breadcrumb';\n\n\nconst api = axios.create({\n    baseURL: `http://localhost:4000`\n  })\n  \n\nconst validationSchema = yup.object().shape({\n    name: yup\n      .string('Enter a name')\n      .required('Name is a required field'),\n    email: yup\n      .string('Enter your email')\n      .email('Enter a valid email')\n      .required('Email is required'),\n    phonenumber: yup\n      .string('Enter phone number')\n      .max(10, 'Phone number should be 10 characters max')\n      .required('Phone number is a required field'),\n    sacco:yup\n        .string('Select a sacco')\n        .required('Sacco is a required field')\n  });\n\nconst saccos = [\n    {\n        value: 'None'\n    },\n    {\n      value: 'Latema'\n    },\n    {\n      value: 'Killeton'\n    },\n    {\n      value: 'Indimanje'\n    },\n    {\n      value: 'Kihomi'\n    },\n  ];\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        // flexWrap: 'no-wrap',\n        // marginTop: theme.spacing(3),\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(10),\n        borderRadius:'10px',\n        backgroundColor:'white'\n    },\n    textField: {\n        marginLeft: theme.spacing(8),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width:\"85%\"\n          },\n        width: '45ch',\n    },\n    div:{\n        // display:'flex'\n        textAlign: 'right'\n    },\n    button: {\n        margin: theme.spacing(1),\n        color:'black',\n        backgroundColor:'#313F9F',\n        border: '1px solid black',\n        borderRadius:'10px',\n        marginTop:'20%'\n      },\n    form:{\n        paddingTop: theme.spacing(4)\n    }\n}));\n\nexport default function SaccoMemberRegistration() {\n    const classes = useStyles();\n    // const [data, setData] = React.useState({});\n\n    const formik = useFormik({\n        initialValues: {\n          name:'',\n          email: '',\n          phonenumber:'',\n          sacco:'',\n          location:'',\n          insurance_plan:''\n        },\n        validationSchema: validationSchema,\n        onSubmit: async (values,{setSubmitting,resetForm}) => {\n\n        try {\n        setSubmitting(true);\n         const response = await api.post('/members/add', values)\n         console.log(\"response object\", response)\n         toast.success(response.data)\n         resetForm()\n        } catch (error) {\n            console.log(\"Some error occured=>\",error.message)\n            console.log(\"error status=>\",error.status)\n            alert(error)\n            // resetForm()\n        }\n\n        },\n      });\n\n    \n    //   console.log(\"here are the mf values=>\", formik.values);\n    return (\n        <div className={classes.root}>\n            <Grid container  spacing={3}>\n                <Grid item xs=\"12\">\n                    <Breadcrumb parent=\"Members\" title=\"Sacco Member Registration\"/>\n                </Grid>\n                <Grid item xs=\"12\">\n                <form onSubmit={formik.handleSubmit} className={classes.form}>\n                    <Grid container spacing={3}>\n                        <Grid item xs=\"12\" sm=\"6\">\n                        <TextField\n                            id=\"name\"\n                            name=\"name\"\n                            label=\"NAME\"\n                            className={classes.textField}\n                            placeholder=\"Enter name\"\n                            margin=\"normal\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            value={formik.values.name}\n                            onChange={formik.handleChange}\n                            error={formik.touched.name && Boolean(formik.errors.name)}\n                            helperText={formik.touched.name && formik.errors.name}\n                            autoFocus\n                        />\n                    \n                        </Grid>\n                        <Grid item xs=\"12\" sm=\"6\">\n                        <TextField\n                            label=\"EMAIL\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            size=\"small\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            value={formik.values.email}\n                            onChange={formik.handleChange}\n                            error={formik.touched.email && Boolean(formik.errors.email)}\n                            helperText={formik.touched.email && formik.errors.email}\n                        />\n                        </Grid>\n                    \n                    </Grid>\n                    <Grid container spacing={3}>\n                        <Grid item xs=\"12\" sm=\"6\">\n                        <TextField\n                            label=\"PHONE NUMBER\"\n                            id=\"phonenumber\"\n                            name=\"phonenumber\"\n                            placeholder=\"Phone Number\"\n                            style={{ marginTop:'2.3ch'}}\n                            className={classes.textField}\n                            margin=\"normal\"\n                            size=\"small\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            value={formik.values.phonenumber}\n                            onChange={formik.handleChange}\n                            error={formik.touched.phonenumber && Boolean(formik.errors.phonenumber)}\n                            helperText={formik.touched.phonenumber && formik.errors.phonenumber}\n                        />\n                        </Grid>\n                        <Grid item xs=\"12\" sm=\"6\">\n                        <TextField\n                            id=\"sacco\"\n                            name=\"sacco\"\n                            select\n                            label=\"Sacco\"\n                            className={classes.textField}\n                            value={saccos}\n                            style={{ marginTop:'2.3ch'}}\n                            SelectProps={{\n                                native: true,\n                            }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            size=\"small\"\n                            value={formik.values.sacco}\n                            onChange={formik.handleChange}\n                            error={formik.touched.sacco && Boolean(formik.errors.sacco)}\n                            helperText={formik.touched.sacco && formik.errors.sacco}\n                            variant=\"outlined\"\n                            >\n                            \n                            {saccos.map((option) => (\n                                <option key={option.value} value={option.value}>\n                                {option.value}\n                                </option>\n                            ))}\n                            \n                        </TextField>\n                        </Grid>\n                    \n                    </Grid>\n                   <Grid container spacing={3}>\n                        <Grid item xs>\n                        <TextField\n                            label=\"INSURANCE PLAN\"\n                            id=\"location\"\n                            name=\"location\"\n                            placeholder=\"Insurance plan\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            size=\"small\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            value={formik.values.location}\n                            onChange={formik.handleChange}\n                            error={formik.touched.location && Boolean(formik.errors.location)}\n                            helperText={formik.touched.location && formik.errors.location}\n                        />\n                        </Grid>\n                         <Grid item xs>\n                         <TextField\n                            label=\"INSURANCE PLAN\"\n                            id=\"insurance_plan\"\n                            name=\"insurance_plan\"\n                            placeholder=\"Insurance plan\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            size=\"small\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            value={formik.values.insurance_plan}\n                            onChange={formik.handleChange}\n                            error={formik.touched.insurance_plan && Boolean(formik.errors.insurance_plan)}\n                            helperText={formik.touched.insurance_plan && formik.errors.insurance_plan}\n                        />\n                        </Grid>\n                    \n                    </Grid>\n                    {/* <Button\n                        type=\"button\"\n                        className=\"outline\"\n                        onClick={formik.handleReset}\n                        disabled={!formik.dirty || formik.isSubmitting}\n                    >\n                    Reset\n                    </Button> */}\n                    <Grid container style={{width: '86%', margin: '0 7%'}}>\n                        <Grid item xs=\"3\"></Grid>\n                        <Grid item xs=\"3\"></Grid>\n                        <Grid item xs=\"3\"></Grid>\n                        <Grid item xs=\"3\">\n                       \n                        <div className={classes.div}>\n                            <Button type=\"submit\" disabled={formik.isSubmitting} size=\"medium\" variant=\"raised\" className={classes.button}>\n                                Submit\n                            </Button>\n                        </div>\n                        </Grid>\n                    </Grid>\n                </form>\n                </Grid>\n            </Grid>\n           \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}