{"ast":null,"code":"var _jsxFileName = \"/Users/agwenchez/Desktop/Afya Kwanza/Super Admin Dashboard/client/src/components/new/Formik/SaccoRegistration.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Grid, Button, Paper } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport Breadcrumb from '../../../layout/breadcrumb';\nimport { withRouter } from 'react-router';\nimport Layout from \"../../AppWrapper\";\nconst api = axios.create({\n  baseURL: `https://afya-kwanza-backend.herokuapp.com`\n});\nconst validationSchema = yup.object().shape({\n  sacco_name: yup.string('Enter a name').required('Sacco Name is a required field'),\n  sacco_email: yup.string('Enter a sacco email').email('Enter a valid email').required('Email is required'),\n  admin_email: yup.string('Enter an admin email').email('Enter a valid email').required('Email is required'),\n  admin_firstname: yup.string('Enter Admin First Name').max(30, 'Admin name should be 30 characters max').required('Admin Name is a required field'),\n  admin_lastname: yup.string('Enter Admin Last Name').max(30, 'Admin name should be 30 characters max').required('Admin Name is a required field'),\n  admin_password: yup.string('Enter an admin password').required('Admin password is a required field'),\n  admin_phonenumber: yup.string('Enter phone number').max(10, 'Phone number should be 10 characters max').required('Phone number is a required field')\n});\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    paddingTop: theme.spacing(10),\n    paddingBottom: theme.spacing(10),\n    borderRadius: '15px',\n    backgroundColor: 'white',\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n  textField: {\n    marginLeft: theme.spacing(8),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"85%\"\n    },\n    width: '45ch'\n  },\n  div: {\n    // display:'flex'\n    textAlign: 'right'\n  },\n  button: {\n    margin: theme.spacing(1),\n    color: 'black',\n    backgroundColor: '#313F9F',\n    border: '1px solid black',\n    borderRadius: '10px',\n    marginTop: '20%'\n  },\n  form: {\n    paddingTop: theme.spacing(4)\n  }\n}));\n\nconst SaccoRegistration = () => {\n  const classes = useStyles(); // const [data, setData] = React.useState({});\n\n  const formik = useFormik({\n    initialValues: {\n      sacco_name: '',\n      admin_email: \"\",\n      sacco_email: \"\",\n      admin_lastname: \"\",\n      admin_firstname: \"\",\n      role: \"sacco_admin\",\n      admin_phonenumber: \"\",\n      admin_password: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      try {\n        setSubmitting(true);\n        const response = await api.post('/saccos/add', values);\n\n        if (response.status === 201) {\n          toast.success(response.data);\n          resetForm();\n        }\n      } catch (error) {\n        console.log(\"Some error occured=>\", error.message);\n\n        if (error.message === 'Request failed with status code 409') {\n          toast.error('Sacco with that name already exists');\n        } else {\n          toast.error('Internal server error');\n        } // resetForm()\n\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Saccos\",\n    title: \"Sacco Registration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    style: {\n      boxShadow: '5px 5px 20px #263238'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"sacco_name\",\n    name: \"sacco_name\",\n    label: \"SACCO NAME\",\n    className: classes.textField,\n    placeholder: \"Enter sacco name\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    size: \"small\",\n    variant: \"outlined\",\n    value: formik.values.sacco_name,\n    onChange: formik.handleChange,\n    error: formik.touched.sacco_name && Boolean(formik.errors.sacco_name),\n    helperText: formik.touched.sacco_name && formik.errors.sacco_name,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"SACCO EMAIL\",\n    id: \"sacco_email\",\n    name: \"sacco_email\",\n    placeholder: \"Enter sacco email\",\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    error: formik.touched.sacco_email && Boolean(formik.errors.sacco_email),\n    helperText: formik.touched.sacco_email && formik.errors.sacco_email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"ADMIN FIRST NAME\",\n    id: \"admin_firstname\",\n    name: \"admin_firstname\",\n    placeholder: \"Enter Admin First Name\",\n    style: {\n      marginTop: '2.3ch'\n    },\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.admin_firstname,\n    onChange: formik.handleChange,\n    error: formik.touched.admin_firstname && Boolean(formik.errors.admin_firstname),\n    helperText: formik.touched.admin_firstname && formik.errors.admin_firstname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"ADMIN LAST NAME\",\n    id: \"admin_lastname\",\n    name: \"admin_lastname\",\n    placeholder: \"Enter Admin Last Name\",\n    style: {\n      marginTop: '2.3ch'\n    },\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.admin_lastname,\n    onChange: formik.handleChange,\n    error: formik.touched.admin_lastname && Boolean(formik.errors.admin_lastname),\n    helperText: formik.touched.admin_firstname && formik.errors.admin_lastname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"ADMIN EMAIL\",\n    id: \"admin_email\",\n    name: \"admin_email\",\n    placeholder: \"Enter Admin Email\",\n    style: {\n      marginTop: '2.3ch'\n    },\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.admin_email,\n    onChange: formik.handleChange,\n    error: formik.touched.admin_email && Boolean(formik.errors.admin_email),\n    helperText: formik.touched.admin_email && formik.errors.admin_email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"ADMIN PHONENUMBER\",\n    id: \"admin_phonenumber\",\n    name: \"admin_phonenumber\",\n    placeholder: \"Enter Admin phonenumber\",\n    style: {\n      marginTop: '2.3ch'\n    },\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.admin_phonenumber,\n    onChange: formik.handleChange,\n    error: formik.touched.admin_phonenumber && Boolean(formik.errors.admin_phonenumber),\n    helperText: formik.touched.admin_phonenumber && formik.errors.admin_phonenumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"ADMIN PASSWORD\",\n    id: \"admin_password\",\n    name: \"admin_password\",\n    placeholder: \"Enter Admin password\",\n    style: {\n      marginTop: '2.3ch'\n    },\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.admin_password,\n    onChange: formik.handleChange,\n    error: formik.touched.admin_password && Boolean(formik.errors.admin_password),\n    helperText: formik.touched.admin_password && formik.errors.admin_password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Role\",\n    id: \"role\",\n    name: \"role\",\n    style: {\n      marginTop: '2.3ch'\n    },\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      readOnly: true\n    },\n    variant: \"outlined\",\n    value: formik.values.role // onChange={formik.handleChange}\n    // error={formik.touched.admin_password && Boolean(formik.errors.admin_password)}\n    // helperText={formik.touched.admin_password && formik.errors.admin_password}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      width: '86%',\n      margin: '0 7%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: formik.isSubmitting,\n    size: \"medium\",\n    variant: \"raised\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 41\n    }\n  }, \"Submit\")))))))));\n};\n\nexport default withRouter(SaccoRegistration);","map":{"version":3,"sources":["/Users/agwenchez/Desktop/Afya Kwanza/Super Admin Dashboard/client/src/components/new/Formik/SaccoRegistration.jsx"],"names":["React","makeStyles","TextField","Grid","Button","Paper","useFormik","yup","axios","toast","Breadcrumb","withRouter","Layout","api","create","baseURL","validationSchema","object","shape","sacco_name","string","required","sacco_email","email","admin_email","admin_firstname","max","admin_lastname","admin_password","admin_phonenumber","useStyles","theme","root","display","paddingTop","spacing","paddingBottom","borderRadius","backgroundColor","marginTop","marginLeft","marginRight","textField","breakpoints","down","width","div","textAlign","button","margin","color","border","form","SaccoRegistration","classes","formik","initialValues","role","onSubmit","values","setSubmitting","resetForm","response","post","status","success","data","error","console","log","message","boxShadow","handleSubmit","shrink","handleChange","touched","Boolean","errors","readOnly","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,KAAlC,QAA+C,mBAA/C;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAG;AADW,CAAb,CAAZ;AAIA,MAAMC,gBAAgB,GAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,UAAU,EAAEZ,GAAG,CACVa,MADO,CACA,cADA,EAEPC,QAFO,CAEE,gCAFF,CAD4B;AAIxCC,EAAAA,WAAW,EAAEf,GAAG,CACXa,MADQ,CACD,qBADC,EAERG,KAFQ,CAEF,qBAFE,EAGRF,QAHQ,CAGC,mBAHD,CAJ2B;AAQxCG,EAAAA,WAAW,EAAEjB,GAAG,CACXa,MADQ,CACD,sBADC,EAERG,KAFQ,CAEF,qBAFE,EAGRF,QAHQ,CAGC,mBAHD,CAR2B;AAYxCI,EAAAA,eAAe,EAAElB,GAAG,CACfa,MADY,CACL,wBADK,EAEZM,GAFY,CAER,EAFQ,EAEJ,wCAFI,EAGZL,QAHY,CAGH,gCAHG,CAZuB;AAgBxCM,EAAAA,cAAc,EAAEpB,GAAG,CACda,MADW,CACJ,uBADI,EAEXM,GAFW,CAEP,EAFO,EAEH,wCAFG,EAGXL,QAHW,CAGF,gCAHE,CAhBwB;AAoBxCO,EAAAA,cAAc,EAAErB,GAAG,CACda,MADW,CACJ,yBADI,EAEXC,QAFW,CAEF,oCAFE,CApBwB;AAuBxCQ,EAAAA,iBAAiB,EAAEtB,GAAG,CACjBa,MADc,CACP,oBADO,EAEdM,GAFc,CAEV,EAFU,EAEN,0CAFM,EAGdL,QAHc,CAGL,kCAHK;AAvBqB,CAAnB,CAAzB;AA8BA,MAAMS,SAAS,GAAG7B,UAAU,CAAE8B,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,UAAU,EAAEH,KAAK,CAACI,OAAN,CAAc,EAAd,CAFV;AAGFC,IAAAA,aAAa,EAAEL,KAAK,CAACI,OAAN,CAAc,EAAd,CAHb;AAIFE,IAAAA,YAAY,EAAE,MAJZ;AAKFC,IAAAA,eAAe,EAAE,OALf;AAMFC,IAAAA,SAAS,EAAER,KAAK,CAACI,OAAN,CAAc,CAAd,CANT;AAOFK,IAAAA,UAAU,EAAET,KAAK,CAACI,OAAN,CAAc,CAAd,CAPV;AAQFM,IAAAA,WAAW,EAAEV,KAAK,CAACI,OAAN,CAAc,CAAd;AARX,GAD+B;AAWrCO,EAAAA,SAAS,EAAE;AACPF,IAAAA,UAAU,EAAET,KAAK,CAACI,OAAN,CAAc,CAAd,CADL;AAEPM,IAAAA,WAAW,EAAEV,KAAK,CAACI,OAAN,CAAc,CAAd,CAFN;AAGP,KAACJ,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BJ,MAAAA,UAAU,EAAET,KAAK,CAACI,OAAN,CAAc,CAAd,CADgB;AAE5BM,MAAAA,WAAW,EAAEV,KAAK,CAACI,OAAN,CAAc,CAAd,CAFe;AAG5BU,MAAAA,KAAK,EAAE;AAHqB,KAHzB;AAQPA,IAAAA,KAAK,EAAE;AARA,GAX0B;AAqBrCC,EAAAA,GAAG,EAAE;AACD;AACAC,IAAAA,SAAS,EAAE;AAFV,GArBgC;AAyBrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAElB,KAAK,CAACI,OAAN,CAAc,CAAd,CADJ;AAEJe,IAAAA,KAAK,EAAE,OAFH;AAGJZ,IAAAA,eAAe,EAAE,SAHb;AAIJa,IAAAA,MAAM,EAAE,iBAJJ;AAKJd,IAAAA,YAAY,EAAE,MALV;AAMJE,IAAAA,SAAS,EAAE;AANP,GAzB6B;AAiCrCa,EAAAA,IAAI,EAAE;AACFlB,IAAAA,UAAU,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADV;AAjC+B,CAAZ,CAAD,CAA5B;;AAsCA,MAAMkB,iBAAiB,GAAG,MAAM;AAC5B,QAAMC,OAAO,GAAGxB,SAAS,EAAzB,CAD4B,CAE5B;;AAEA,QAAMyB,MAAM,GAAGjD,SAAS,CAAC;AACrBkD,IAAAA,aAAa,EAAE;AACXrC,MAAAA,UAAU,EAAE,EADD;AAEXK,MAAAA,WAAW,EAAE,EAFF;AAGXF,MAAAA,WAAW,EAAE,EAHF;AAIXK,MAAAA,cAAc,EAAE,EAJL;AAKXF,MAAAA,eAAe,EAAE,EALN;AAMXgC,MAAAA,IAAI,EAAE,aANK;AAOX5B,MAAAA,iBAAiB,EAAE,EAPR;AAQXD,MAAAA,cAAc,EAAE;AARL,KADM;AAWrBZ,IAAAA,gBAAgB,EAAEA,gBAXG;AAYrB0C,IAAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAf,KAAgD;AACtD,UAAI;AACAD,QAAAA,aAAa,CAAC,IAAD,CAAb;AACA,cAAME,QAAQ,GAAG,MAAMjD,GAAG,CAACkD,IAAJ,CAAS,aAAT,EAAwBJ,MAAxB,CAAvB;;AACA,YAAIG,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzBvD,UAAAA,KAAK,CAACwD,OAAN,CAAcH,QAAQ,CAACI,IAAvB;AACAL,UAAAA,SAAS;AACZ;AACJ,OAPD,CAOE,OAAOM,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAAK,CAACG,OAA1C;;AACA,YAAIH,KAAK,CAACG,OAAN,KAAkB,qCAAtB,EAA6D;AAEzD7D,UAAAA,KAAK,CAAC0D,KAAN,CAAY,qCAAZ;AACH,SAHD,MAIK;AACD1D,UAAAA,KAAK,CAAC0D,KAAN,CAAY,uBAAZ;AACH,SARW,CASZ;;AACH;AAEJ;AAhCoB,GAAD,CAAxB;AAoCA,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAC,QAAnB;AAA4B,IAAA,KAAK,EAAC,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACtB,IAAxB;AAA8B,IAAA,KAAK,EAAE;AAAEuC,MAAAA,SAAS,EAAE;AAAb,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEhB,MAAM,CAACiB,YAAvB;AAAqC,IAAA,SAAS,EAAElB,OAAO,CAACF,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,IAAd;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,YADP;AAEI,IAAA,IAAI,EAAC,YAFT;AAGI,IAAA,KAAK,EAAC,YAHV;AAII,IAAA,SAAS,EAAEE,OAAO,CAACZ,SAJvB;AAKI,IAAA,WAAW,EAAC,kBALhB;AAMI,IAAA,MAAM,EAAC,QANX;AAOI,IAAA,eAAe,EAAE;AACb+B,MAAAA,MAAM,EAAE;AADK,KAPrB;AAUI,IAAA,IAAI,EAAC,OAVT;AAWI,IAAA,OAAO,EAAC,UAXZ;AAYI,IAAA,KAAK,EAAElB,MAAM,CAACI,MAAP,CAAcxC,UAZzB;AAaI,IAAA,QAAQ,EAAEoC,MAAM,CAACmB,YAbrB;AAcI,IAAA,KAAK,EAAEnB,MAAM,CAACoB,OAAP,CAAexD,UAAf,IAA6ByD,OAAO,CAACrB,MAAM,CAACsB,MAAP,CAAc1D,UAAf,CAd/C;AAeI,IAAA,UAAU,EAAEoC,MAAM,CAACoB,OAAP,CAAexD,UAAf,IAA6BoC,MAAM,CAACsB,MAAP,CAAc1D,UAf3D;AAgBI,IAAA,SAAS,MAhBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAsBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,IAAd;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,EAAE,EAAC,aAFP;AAGI,IAAA,IAAI,EAAC,aAHT;AAII,IAAA,WAAW,EAAC,mBAJhB;AAKI,IAAA,SAAS,EAAEmC,OAAO,CAACZ,SALvB;AAMI,IAAA,MAAM,EAAC,QANX;AAOI,IAAA,IAAI,EAAC,OAPT;AAQI,IAAA,eAAe,EAAE;AACb+B,MAAAA,MAAM,EAAE;AADK,KARrB;AAWI,IAAA,OAAO,EAAC,UAXZ;AAYI,IAAA,KAAK,EAAElB,MAAM,CAACI,MAAP,CAAcpC,KAZzB;AAaI,IAAA,QAAQ,EAAEgC,MAAM,CAACmB,YAbrB;AAcI,IAAA,KAAK,EAAEnB,MAAM,CAACoB,OAAP,CAAerD,WAAf,IAA8BsD,OAAO,CAACrB,MAAM,CAACsB,MAAP,CAAcvD,WAAf,CAdhD;AAeI,IAAA,UAAU,EAAEiC,MAAM,CAACoB,OAAP,CAAerD,WAAf,IAA8BiC,MAAM,CAACsB,MAAP,CAAcvD,WAf5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAtBJ,CADJ,eA4CI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,IAAd;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,kBADV;AAEI,IAAA,EAAE,EAAC,iBAFP;AAGI,IAAA,IAAI,EAAC,iBAHT;AAII,IAAA,WAAW,EAAC,wBAJhB;AAKI,IAAA,KAAK,EAAE;AAAEiB,MAAAA,SAAS,EAAE;AAAb,KALX;AAMI,IAAA,SAAS,EAAEe,OAAO,CAACZ,SANvB;AAOI,IAAA,MAAM,EAAC,QAPX;AAQI,IAAA,IAAI,EAAC,OART;AASI,IAAA,eAAe,EAAE;AACb+B,MAAAA,MAAM,EAAE;AADK,KATrB;AAYI,IAAA,OAAO,EAAC,UAZZ;AAaI,IAAA,KAAK,EAAElB,MAAM,CAACI,MAAP,CAAclC,eAbzB;AAcI,IAAA,QAAQ,EAAE8B,MAAM,CAACmB,YAdrB;AAeI,IAAA,KAAK,EAAEnB,MAAM,CAACoB,OAAP,CAAelD,eAAf,IAAkCmD,OAAO,CAACrB,MAAM,CAACsB,MAAP,CAAcpD,eAAf,CAfpD;AAgBI,IAAA,UAAU,EAAE8B,MAAM,CAACoB,OAAP,CAAelD,eAAf,IAAkC8B,MAAM,CAACsB,MAAP,CAAcpD,eAhBhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAqBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,IAAd;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,iBADV;AAEI,IAAA,EAAE,EAAC,gBAFP;AAGI,IAAA,IAAI,EAAC,gBAHT;AAII,IAAA,WAAW,EAAC,uBAJhB;AAKI,IAAA,KAAK,EAAE;AAAEc,MAAAA,SAAS,EAAE;AAAb,KALX;AAMI,IAAA,SAAS,EAAEe,OAAO,CAACZ,SANvB;AAOI,IAAA,MAAM,EAAC,QAPX;AAQI,IAAA,IAAI,EAAC,OART;AASI,IAAA,eAAe,EAAE;AACb+B,MAAAA,MAAM,EAAE;AADK,KATrB;AAYI,IAAA,OAAO,EAAC,UAZZ;AAaI,IAAA,KAAK,EAAElB,MAAM,CAACI,MAAP,CAAchC,cAbzB;AAcI,IAAA,QAAQ,EAAE4B,MAAM,CAACmB,YAdrB;AAeI,IAAA,KAAK,EAAEnB,MAAM,CAACoB,OAAP,CAAehD,cAAf,IAAiCiD,OAAO,CAACrB,MAAM,CAACsB,MAAP,CAAclD,cAAf,CAfnD;AAgBI,IAAA,UAAU,EAAE4B,MAAM,CAACoB,OAAP,CAAelD,eAAf,IAAkC8B,MAAM,CAACsB,MAAP,CAAclD,cAhBhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CArBJ,CA5CJ,eAwFI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,IAAd;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,EAAE,EAAC,aAFP;AAGI,IAAA,IAAI,EAAC,aAHT;AAII,IAAA,WAAW,EAAC,mBAJhB;AAKI,IAAA,KAAK,EAAE;AAAEY,MAAAA,SAAS,EAAE;AAAb,KALX;AAMI,IAAA,SAAS,EAAEe,OAAO,CAACZ,SANvB;AAOI,IAAA,MAAM,EAAC,QAPX;AAQI,IAAA,IAAI,EAAC,OART;AASI,IAAA,eAAe,EAAE;AACb+B,MAAAA,MAAM,EAAE;AADK,KATrB;AAYI,IAAA,OAAO,EAAC,UAZZ;AAaI,IAAA,KAAK,EAAElB,MAAM,CAACI,MAAP,CAAcnC,WAbzB;AAcI,IAAA,QAAQ,EAAE+B,MAAM,CAACmB,YAdrB;AAeI,IAAA,KAAK,EAAEnB,MAAM,CAACoB,OAAP,CAAenD,WAAf,IAA8BoD,OAAO,CAACrB,MAAM,CAACsB,MAAP,CAAcrD,WAAf,CAfhD;AAgBI,IAAA,UAAU,EAAE+B,MAAM,CAACoB,OAAP,CAAenD,WAAf,IAA8B+B,MAAM,CAACsB,MAAP,CAAcrD,WAhB5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAsBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,IAAd;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,EAAE,EAAC,mBAFP;AAGI,IAAA,IAAI,EAAC,mBAHT;AAII,IAAA,WAAW,EAAC,yBAJhB;AAKI,IAAA,KAAK,EAAE;AAAEe,MAAAA,SAAS,EAAE;AAAb,KALX;AAMI,IAAA,SAAS,EAAEe,OAAO,CAACZ,SANvB;AAOI,IAAA,MAAM,EAAC,QAPX;AAQI,IAAA,IAAI,EAAC,OART;AASI,IAAA,eAAe,EAAE;AACb+B,MAAAA,MAAM,EAAE;AADK,KATrB;AAYI,IAAA,OAAO,EAAC,UAZZ;AAaI,IAAA,KAAK,EAAElB,MAAM,CAACI,MAAP,CAAc9B,iBAbzB;AAcI,IAAA,QAAQ,EAAE0B,MAAM,CAACmB,YAdrB;AAeI,IAAA,KAAK,EAAEnB,MAAM,CAACoB,OAAP,CAAe9C,iBAAf,IAAoC+C,OAAO,CAACrB,MAAM,CAACsB,MAAP,CAAchD,iBAAf,CAftD;AAgBI,IAAA,UAAU,EAAE0B,MAAM,CAACoB,OAAP,CAAe9C,iBAAf,IAAoC0B,MAAM,CAACsB,MAAP,CAAchD,iBAhBlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAtBJ,CAxFJ,eAoII,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,IAAd;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,gBADV;AAEI,IAAA,EAAE,EAAC,gBAFP;AAGI,IAAA,IAAI,EAAC,gBAHT;AAII,IAAA,WAAW,EAAC,sBAJhB;AAKI,IAAA,KAAK,EAAE;AAAEU,MAAAA,SAAS,EAAE;AAAb,KALX;AAMI,IAAA,SAAS,EAAEe,OAAO,CAACZ,SANvB;AAOI,IAAA,MAAM,EAAC,QAPX;AAQI,IAAA,IAAI,EAAC,OART;AASI,IAAA,eAAe,EAAE;AACb+B,MAAAA,MAAM,EAAE;AADK,KATrB;AAYI,IAAA,OAAO,EAAC,UAZZ;AAaI,IAAA,KAAK,EAAElB,MAAM,CAACI,MAAP,CAAc/B,cAbzB;AAcI,IAAA,QAAQ,EAAE2B,MAAM,CAACmB,YAdrB;AAeI,IAAA,KAAK,EAAEnB,MAAM,CAACoB,OAAP,CAAe/C,cAAf,IAAiCgD,OAAO,CAACrB,MAAM,CAACsB,MAAP,CAAcjD,cAAf,CAfnD;AAgBI,IAAA,UAAU,EAAE2B,MAAM,CAACoB,OAAP,CAAe/C,cAAf,IAAiC2B,MAAM,CAACsB,MAAP,CAAcjD,cAhB/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAqBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,IAAd;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,MADV;AAEI,IAAA,EAAE,EAAC,MAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAE;AAAEW,MAAAA,SAAS,EAAE;AAAb,KAJX;AAKI,IAAA,SAAS,EAAEe,OAAO,CAACZ,SALvB;AAMI,IAAA,MAAM,EAAC,QANX;AAOI,IAAA,IAAI,EAAC,OAPT;AAQI,IAAA,eAAe,EAAE;AACb+B,MAAAA,MAAM,EAAE;AADK,KARrB;AAWI,IAAA,UAAU,EACN;AAAEK,MAAAA,QAAQ,EAAE;AAAZ,KAZR;AAcI,IAAA,OAAO,EAAC,UAdZ;AAeI,IAAA,KAAK,EAAEvB,MAAM,CAACI,MAAP,CAAcF,IAfzB,CAgBA;AACA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CArBJ,CApIJ,eA0LI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,KAAK,EAAE;AAAEZ,MAAAA,KAAK,EAAE,KAAT;AAAgBI,MAAAA,MAAM,EAAE;AAAxB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAEK,OAAO,CAACR,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAES,MAAM,CAACwB,YAAvC;AAAqD,IAAA,IAAI,EAAC,QAA1D;AAAmE,IAAA,OAAO,EAAC,QAA3E;AAAoF,IAAA,SAAS,EAAEzB,OAAO,CAACN,MAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAFJ,CAJJ,CA1LJ,CADJ,CADJ,CADJ,CAJJ,CADJ;AAsNH,CA9PD;;AAgQA,eAAerC,UAAU,CAAC0C,iBAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Grid, Button, Paper } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport Breadcrumb from '../../../layout/breadcrumb';\nimport { withRouter } from 'react-router';\nimport Layout from \"../../AppWrapper\"\n\nconst api = axios.create({\n    baseURL: `https://afya-kwanza-backend.herokuapp.com`\n})\n\nconst validationSchema = yup.object().shape({\n    sacco_name: yup\n        .string('Enter a name')\n        .required('Sacco Name is a required field'),\n    sacco_email: yup\n        .string('Enter a sacco email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    admin_email: yup\n        .string('Enter an admin email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    admin_firstname: yup\n        .string('Enter Admin First Name')\n        .max(30, 'Admin name should be 30 characters max')\n        .required('Admin Name is a required field'),\n    admin_lastname: yup\n        .string('Enter Admin Last Name')\n        .max(30, 'Admin name should be 30 characters max')\n        .required('Admin Name is a required field'),\n    admin_password: yup\n        .string('Enter an admin password')\n        .required('Admin password is a required field'),\n    admin_phonenumber: yup\n        .string('Enter phone number')\n        .max(10, 'Phone number should be 10 characters max')\n        .required('Phone number is a required field'),\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        paddingTop: theme.spacing(10),\n        paddingBottom: theme.spacing(10),\n        borderRadius: '15px',\n        backgroundColor: 'white',\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2)\n    },\n    textField: {\n        marginLeft: theme.spacing(8),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: \"85%\"\n        },\n        width: '45ch',\n    },\n    div: {\n        // display:'flex'\n        textAlign: 'right'\n    },\n    button: {\n        margin: theme.spacing(1),\n        color: 'black',\n        backgroundColor: '#313F9F',\n        border: '1px solid black',\n        borderRadius: '10px',\n        marginTop: '20%'\n    },\n    form: {\n        paddingTop: theme.spacing(4)\n    }\n}));\n\nconst SaccoRegistration = () => {\n    const classes = useStyles();\n    // const [data, setData] = React.useState({});\n\n    const formik = useFormik({\n        initialValues: {\n            sacco_name: '',\n            admin_email: \"\",\n            sacco_email: \"\",\n            admin_lastname: \"\",\n            admin_firstname: \"\",\n            role: \"sacco_admin\",\n            admin_phonenumber: \"\",\n            admin_password: \"\"\n        },\n        validationSchema: validationSchema,\n        onSubmit: async (values, { setSubmitting, resetForm }) => {\n            try {\n                setSubmitting(true);\n                const response = await api.post('/saccos/add', values)\n                if (response.status === 201) {\n                    toast.success(response.data)\n                    resetForm()\n                }\n            } catch (error) {\n                console.log(\"Some error occured=>\", error.message)\n                if (error.message === 'Request failed with status code 409') {\n\n                    toast.error('Sacco with that name already exists')\n                }\n                else {\n                    toast.error('Internal server error')\n                }\n                // resetForm()\n            }\n\n        },\n    });\n\n\n    return (\n        <Layout>\n            <Grid item xs=\"12\">\n                <Breadcrumb parent=\"Saccos\" title=\"Sacco Registration\" />\n            </Grid>\n            <div className={classes.root} style={{ boxShadow: '5px 5px 20px #263238' }}>\n                <Grid container spacing={3} >\n                    <Grid item xs=\"12\">\n                        <form onSubmit={formik.handleSubmit} className={classes.form}>\n                            <Grid container spacing={3}>\n                                <Grid item xs=\"12\" sm=\"6\">\n                                    <TextField\n                                        id=\"sacco_name\"\n                                        name=\"sacco_name\"\n                                        label=\"SACCO NAME\"\n                                        className={classes.textField}\n                                        placeholder=\"Enter sacco name\"\n                                        margin=\"normal\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        value={formik.values.sacco_name}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.sacco_name && Boolean(formik.errors.sacco_name)}\n                                        helperText={formik.touched.sacco_name && formik.errors.sacco_name}\n                                        autoFocus\n                                    />\n\n                                </Grid>\n                                <Grid item xs=\"12\" sm=\"6\">\n                                    <TextField\n                                        label=\"SACCO EMAIL\"\n                                        id=\"sacco_email\"\n                                        name=\"sacco_email\"\n                                        placeholder=\"Enter sacco email\"\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        size=\"small\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                        value={formik.values.email}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.sacco_email && Boolean(formik.errors.sacco_email)}\n                                        helperText={formik.touched.sacco_email && formik.errors.sacco_email}\n                                    />\n                                </Grid>\n\n                            </Grid>\n                            <Grid container spacing={3}>\n                                <Grid item xs=\"12\" sm=\"6\">\n                                    <TextField\n                                        label=\"ADMIN FIRST NAME\"\n                                        id=\"admin_firstname\"\n                                        name=\"admin_firstname\"\n                                        placeholder=\"Enter Admin First Name\"\n                                        style={{ marginTop: '2.3ch' }}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        size=\"small\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                        value={formik.values.admin_firstname}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.admin_firstname && Boolean(formik.errors.admin_firstname)}\n                                        helperText={formik.touched.admin_firstname && formik.errors.admin_firstname}\n                                    />\n                                </Grid>\n                                <Grid item xs=\"12\" sm=\"6\">\n                                    <TextField\n                                        label=\"ADMIN LAST NAME\"\n                                        id=\"admin_lastname\"\n                                        name=\"admin_lastname\"\n                                        placeholder=\"Enter Admin Last Name\"\n                                        style={{ marginTop: '2.3ch' }}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        size=\"small\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                        value={formik.values.admin_lastname}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.admin_lastname && Boolean(formik.errors.admin_lastname)}\n                                        helperText={formik.touched.admin_firstname && formik.errors.admin_lastname}\n                                    />\n\n                                </Grid>\n\n                            </Grid>\n                            <Grid container spacing={3}>\n                                <Grid item xs=\"12\" sm=\"6\">\n                                    <TextField\n                                        label=\"ADMIN EMAIL\"\n                                        id=\"admin_email\"\n                                        name=\"admin_email\"\n                                        placeholder=\"Enter Admin Email\"\n                                        style={{ marginTop: '2.3ch' }}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        size=\"small\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                        value={formik.values.admin_email}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.admin_email && Boolean(formik.errors.admin_email)}\n                                        helperText={formik.touched.admin_email && formik.errors.admin_email}\n                                    />\n\n                                </Grid>\n                                <Grid item xs=\"12\" sm=\"6\">\n                                    <TextField\n                                        label=\"ADMIN PHONENUMBER\"\n                                        id=\"admin_phonenumber\"\n                                        name=\"admin_phonenumber\"\n                                        placeholder=\"Enter Admin phonenumber\"\n                                        style={{ marginTop: '2.3ch' }}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        size=\"small\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                        value={formik.values.admin_phonenumber}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.admin_phonenumber && Boolean(formik.errors.admin_phonenumber)}\n                                        helperText={formik.touched.admin_phonenumber && formik.errors.admin_phonenumber}\n                                    />\n                                </Grid>\n\n                            </Grid>\n                            <Grid container spacing={3}>\n                                <Grid item xs=\"12\" sm=\"6\">\n                                    <TextField\n                                        label=\"ADMIN PASSWORD\"\n                                        id=\"admin_password\"\n                                        name=\"admin_password\"\n                                        placeholder=\"Enter Admin password\"\n                                        style={{ marginTop: '2.3ch' }}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        size=\"small\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                        value={formik.values.admin_password}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.admin_password && Boolean(formik.errors.admin_password)}\n                                        helperText={formik.touched.admin_password && formik.errors.admin_password}\n                                    />\n                                </Grid>\n                                <Grid item xs=\"12\" sm=\"6\">\n                                    <TextField\n                                        label=\"Role\"\n                                        id=\"role\"\n                                        name=\"role\"\n                                        style={{ marginTop: '2.3ch' }}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        size=\"small\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        inputProps={\n                                            { readOnly: true, }\n                                        }\n                                        variant=\"outlined\"\n                                        value={formik.values.role}\n                                    // onChange={formik.handleChange}\n                                    // error={formik.touched.admin_password && Boolean(formik.errors.admin_password)}\n                                    // helperText={formik.touched.admin_password && formik.errors.admin_password}\n                                    />\n                                </Grid>\n\n                            </Grid>\n\n                            {/* <Button\n                        type=\"button\"\n                        className=\"outline\"\n                        onClick={formik.handleReset}\n                        disabled={!formik.dirty || formik.isSubmitting}\n                    >\n                    Reset\n                    </Button> */}\n                            <Grid container style={{ width: '86%', margin: '0 7%' }}>\n                                <Grid item xs=\"3\"></Grid>\n                                <Grid item xs=\"3\"></Grid>\n                                <Grid item xs=\"3\"></Grid>\n                                <Grid item xs=\"3\">\n\n                                    <div className={classes.div}>\n                                        <Button type=\"submit\" disabled={formik.isSubmitting} size=\"medium\" variant=\"raised\" className={classes.button}>\n                                            Submit\n                            </Button>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Layout>\n    );\n}\n\nexport default withRouter(SaccoRegistration)"]},"metadata":{},"sourceType":"module"}