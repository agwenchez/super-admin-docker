{"ast":null,"code":"var _jsxFileName = \"/Users/agwenchez/Desktop/Afya Kwanza/Admin Dashboard/client/src/components/app.jsx\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport ThemeCustomizer from \"../layout/theme-customizer\";\nimport Layout from \"./AppWrapper\";\nimport { ToastContainer } from 'react-toastify';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Dashboard from \"../components/dashboard/dashboard\";\nimport Login from \"../components/new/Login\";\nimport Members from \"../components/new/MembersTable\";\nimport Saccos from \"../components/new/SaccoTable\";\nimport MembersRegistration from \"../components/new/Formik/SaccoMemberRegistration\";\nimport SaccoRegistration from \"../components/new/Formik/SaccoRegistration\";\nimport Axios from 'axios';\nimport SaccoMemberRegistration from '../components/new/Formik/SaccoMemberRegistration';\nimport ProtectedRoute from \"../auth/ProtectedRoute\";\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState('');\n  const [role, setRole] = useState('');\n  const [isAuth, setisAuth] = useState(false);\n  const jwt_token = localStorage.tokenated;\n\n  const getProfile = async () => {\n    console.log(\"Stored token=>\", token);\n\n    try {\n      const res = await Axios.get(\"http://localhost:4000/admin/is-verified\", {\n        headers: {\n          token: token\n        }\n      }); // const data = await res.json();\n\n      console.log(\"data from server==>\", res.data);\n      setUser(res.data);\n      setRole(res.data.roles);\n      console.log(\"User role==>\", role);\n      return res.data; // console.log(\"Async  user==>\", user)\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const profile = await getProfile();\n      console.log(\"get profile method=>\", profile);\n    })();\n\n    setToken(localStorage.tokenated);\n    console.log(\"Token==>\", token);\n\n    if (token !== '') {\n      setisAuth(true);\n    } else {\n      setisAuth(false);\n    } // setToken(localStorage.tokenated)\n    // console.log(\"Token consoled=>\", token)\n    // console.log(\"User role==>\", role)\n\n\n    console.log(\"Auth==>\", isAuth);\n  }, [token, isAuth]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: '/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 47\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    path: \"/dashboard\",\n    isAuth: isAuth,\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    path: \"/dashboard/members\",\n    isAuth: isAuth,\n    component: Members,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    path: \"/dashboard/saccos\",\n    isAuth: isAuth,\n    component: Saccos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    path: \"/dashboard/saccos/new\",\n    isAuth: isAuth,\n    component: SaccoRegistration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    path: \"/dashboard/members/new\",\n    isAuth: isAuth,\n    component: SaccoMemberRegistration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ThemeCustomizer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/agwenchez/Desktop/Afya Kwanza/Admin Dashboard/client/src/components/app.jsx"],"names":["React","Fragment","useEffect","useState","ThemeCustomizer","Layout","ToastContainer","BrowserRouter","Router","Route","Switch","Redirect","Dashboard","Login","Members","Saccos","MembersRegistration","SaccoRegistration","Axios","SaccoMemberRegistration","ProtectedRoute","App","user","setUser","token","setToken","role","setRole","isAuth","setisAuth","jwt_token","localStorage","tokenated","getProfile","console","log","res","get","headers","data","roles","err","error","message","profile"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport ThemeCustomizer from \"../layout/theme-customizer\"\nimport Layout from \"./AppWrapper\"\nimport { ToastContainer } from 'react-toastify';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Dashboard from \"../components/dashboard/dashboard\"\nimport Login from \"../components/new/Login\"\nimport Members from \"../components/new/MembersTable\"\nimport Saccos from \"../components/new/SaccoTable\"\nimport MembersRegistration from \"../components/new/Formik/SaccoMemberRegistration\"\nimport SaccoRegistration from \"../components/new/Formik/SaccoRegistration\"\nimport Axios from 'axios';\nimport SaccoMemberRegistration from '../components/new/Formik/SaccoMemberRegistration';\nimport ProtectedRoute from \"../auth/ProtectedRoute\"\n\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [token, setToken] = useState('')\n  const [role, setRole] = useState('')\n  const [isAuth, setisAuth] = useState(false)\n \n  const jwt_token = localStorage.tokenated\n  const getProfile = async () => {\n    \n    console.log(\"Stored token=>\",token)\n\n    \n    try {\n      const res = await Axios.get(\"http://localhost:4000/admin/is-verified\", {\n        headers: { token: token }\n      });\n\n      // const data = await res.json();\n      console.log(\"data from server==>\", res.data)\n      setUser(res.data);\n      setRole(res.data.roles)\n      console.log(\"User role==>\", role)\n\n      return res.data\n      // console.log(\"Async  user==>\", user)\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n\n    (async ()=>{\n\n      const profile = await getProfile()\n      console.log(\"get profile method=>\",profile )\n    })()\n    \n    setToken(localStorage.tokenated)\n    console.log(\"Token==>\", token)\n    if(token !== ''){\n      setisAuth(true)\n    }else{\n      setisAuth(false)\n    }\n\n    // setToken(localStorage.tokenated)\n    // console.log(\"Token consoled=>\", token)\n    // console.log(\"User role==>\", role)\n    console.log(\"Auth==>\", isAuth)\n  }, [token,isAuth])\n\n\n  return (\n    \n    <Fragment>\n      {/* <Layout /> */}\n\n      <Router basename={'/'}>\n        <Switch>\n          {/* <Route\n            exact\n            path=\"/login\"\n            render={() =>\n              token === undefined || user === null ? (\n                <Login />\n              ) : (\n                <Redirect to=\"/dashboard\" />\n              )\n            }\n          /> */}\n\n          <Route exact path='/' render={() => <Redirect to=\"/dashboard\" />} />\n          <Route exact path='/login' component={Login} />\n          <ProtectedRoute path=\"/dashboard\" isAuth={isAuth} component={Dashboard} />\n          <ProtectedRoute path=\"/dashboard/members\"isAuth={isAuth} component={Members} />\n          <ProtectedRoute path=\"/dashboard/saccos\" isAuth={isAuth} component={Saccos} />\n          <ProtectedRoute path=\"/dashboard/saccos/new\" isAuth={isAuth} component={SaccoRegistration} />\n          <ProtectedRoute path=\"/dashboard/members/new\"isAuth={isAuth}  component={SaccoMemberRegistration} />\n           {/* <Route\n            exact\n            path=\"/dashboard\"\n            render={() =>\n              token === undefined || user === null ? (\n                <Login />\n              ) : (\n                <Dashboard/>\n              )\n            }\n          /> */}\n\n          {/* <Route\n            exact\n            path=\"/dashboard/members\"\n            render={() =>\n              token !== undefined || user !== null ? (\n                <Members />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/dashboard/members/new\"\n            render={() =>\n              token !== undefined || user !== null ? (\n                <SaccoMemberRegistration />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/dashboard/saccos\"\n            render={() =>\n              token !== undefined || user !== null ? (\n                <Saccos />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/dashboard/saccos/new\"\n            render={() =>\n              token !== undefined || user !== null ? (\n                <SaccoRegistration />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          /> */}\n\n\n          {/* <Route exact path='/dashboard' component={Dashboard} />\n          <Route exact path='/dashboard/saccos' component={Saccos} />\n          <Route exact path='/dashboard/members' component={Members} />\n          <Route exact path='/dashboard/members/new' component={MembersRegistration} />\n          <Route exact path='/dashboard/saccos/new' component={SaccoRegistration} />  */}\n        </Switch>\n      </Router>\n      <ToastContainer />\n      <ThemeCustomizer />\n    </Fragment>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}