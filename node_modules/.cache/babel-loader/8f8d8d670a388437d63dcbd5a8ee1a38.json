{"ast":null,"code":"var _jsxFileName = \"/Users/agwenchez/Desktop/Afya Kwanza/Super Admin Dashboard/client/src/components/new/Formik/SaccoRegistration.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Grid, Button, Paper } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport Breadcrumb from '../../../layout/breadcrumb';\nimport { withRouter } from 'react-router';\nimport Layout from \"../../AppWrapper\";\nconst api = axios.create({\n  baseURL: `http://localhost:4000`\n});\nconst validationSchema = yup.object().shape({\n  name: yup.string('Enter a name').required('Name is a required field'),\n  email: yup.string('Enter a sacco email').email('Enter a valid email').required('Email is required'),\n  admin_name: yup.string('Enter Admin Name').max(30, 'Admin name should be 30 characters max').required('Amin Name is a required field'),\n  admin_password: yup.string('Enter an admin password').required('Admin password is a required field')\n});\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    paddingTop: theme.spacing(10),\n    paddingBottom: theme.spacing(10),\n    borderRadius: '15px',\n    backgroundColor: 'white',\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    marginLeft: theme.spacing(8),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"85%\"\n    },\n    width: '45ch'\n  },\n  div: {\n    // display:'flex'\n    textAlign: 'right'\n  },\n  button: {\n    margin: theme.spacing(1),\n    color: 'black',\n    backgroundColor: '#313F9F',\n    border: '1px solid black',\n    borderRadius: '10px',\n    marginTop: '20%'\n  },\n  form: {\n    paddingTop: theme.spacing(4)\n  }\n}));\n\nconst SaccoRegistration = () => {\n  const classes = useStyles(); // const [data, setData] = React.useState({});\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      admin_name: '',\n      admin_password: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      try {\n        setSubmitting(true);\n        const response = await api.post('/saccos/add', values);\n\n        if (response.status === 201) {\n          toast.success(response.data);\n          resetForm();\n        }\n      } catch (error) {\n        console.log(\"Some error occured=>\", error.message);\n\n        if (error.message === 'Request failed with status code 409') {\n          toast.error('Sacco with that name already exists');\n        } else {\n          toast.error('Internal server error');\n        } // resetForm()\n\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Saccos\",\n    title: \"Sacco Registration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    style: {\n      boxShadow: '5px 5px 20px #263238'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    name: \"name\",\n    label: \"NAME\",\n    className: classes.textField,\n    placeholder: \"Enter sacco name\",\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    size: \"small\",\n    variant: \"outlined\",\n    value: formik.values.name,\n    onChange: formik.handleChange,\n    error: formik.touched.name && Boolean(formik.errors.name),\n    helperText: formik.touched.name && formik.errors.name,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"EMAIL\",\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"Enter sacco email\",\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    error: formik.touched.sacoo_email && Boolean(formik.errors.email),\n    helperText: formik.touched.email && formik.errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"ADMIN NAME\",\n    id: \"admin_name\",\n    name: \"admin_name\",\n    placeholder: \"Enter Admin name\",\n    style: {\n      marginTop: '2.3ch'\n    },\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.admin_name,\n    onChange: formik.handleChange,\n    error: formik.touched.admin_name && Boolean(formik.errors.admin_name),\n    helperText: formik.touched.admin_name && formik.errors.admin_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"ADMIN PASSWORD\",\n    id: \"admin_password\",\n    name: \"admin_password\",\n    placeholder: \"Enter Admin password\",\n    style: {\n      marginTop: '2.3ch'\n    },\n    className: classes.textField,\n    margin: \"normal\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    value: formik.values.admin_password,\n    onChange: formik.handleChange,\n    error: formik.touched.admin_password && Boolean(formik.errors.admin_password),\n    helperText: formik.touched.admin_password && formik.errors.admin_password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      width: '86%',\n      margin: '0 7%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: formik.isSubmitting,\n    size: \"medium\",\n    variant: \"raised\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 41\n    }\n  }, \"Submit\")))))))));\n};\n\nexport default withRouter(SaccoRegistration);","map":{"version":3,"sources":["/Users/agwenchez/Desktop/Afya Kwanza/Super Admin Dashboard/client/src/components/new/Formik/SaccoRegistration.jsx"],"names":["React","makeStyles","TextField","Grid","Button","Paper","useFormik","yup","axios","toast","Breadcrumb","withRouter","Layout","api","create","baseURL","validationSchema","object","shape","name","string","required","email","admin_name","max","admin_password","useStyles","theme","root","display","paddingTop","spacing","paddingBottom","borderRadius","backgroundColor","marginTop","textField","marginLeft","marginRight","breakpoints","down","width","div","textAlign","button","margin","color","border","form","SaccoRegistration","classes","formik","initialValues","onSubmit","values","setSubmitting","resetForm","response","post","status","success","data","error","console","log","message","boxShadow","handleSubmit","shrink","handleChange","touched","Boolean","errors","sacoo_email","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Grid, Button, Paper } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport Breadcrumb from '../../../layout/breadcrumb';\nimport { withRouter } from 'react-router';\nimport Layout from \"../../AppWrapper\"\n\nconst api = axios.create({\n    baseURL: `http://localhost:4000`\n})\n\n\nconst validationSchema = yup.object().shape({\n    name: yup\n        .string('Enter a name')\n        .required('Name is a required field'),\n    email: yup\n        .string('Enter a sacco email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    admin_name: yup\n        .string('Enter Admin Name')\n        .max(30, 'Admin name should be 30 characters max')\n        .required('Amin Name is a required field'),\n    admin_password: yup\n        .string('Enter an admin password')\n        .required('Admin password is a required field')\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        paddingTop: theme.spacing(10),\n        paddingBottom: theme.spacing(10),\n        borderRadius: '15px',\n        backgroundColor: 'white',\n        marginTop:theme.spacing(3)\n    },\n    textField: {\n        marginLeft: theme.spacing(8),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: \"85%\"\n        },\n        width: '45ch',\n    },\n    div: {\n        // display:'flex'\n        textAlign: 'right'\n    },\n    button: {\n        margin: theme.spacing(1),\n        color: 'black',\n        backgroundColor: '#313F9F',\n        border: '1px solid black',\n        borderRadius: '10px',\n        marginTop: '20%'\n    },\n    form: {\n        paddingTop: theme.spacing(4)\n    }\n}));\n\nconst SaccoRegistration = () => {\n    const classes = useStyles();\n    // const [data, setData] = React.useState({});\n\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            email: '',\n            admin_name: '',\n            admin_password: ''\n        },\n        validationSchema: validationSchema,\n        onSubmit: async (values, { setSubmitting, resetForm }) => {\n            try {\n                setSubmitting(true);\n                const response = await api.post('/saccos/add', values)\n                if (response.status === 201) {\n                    toast.success(response.data)\n                    resetForm()\n                }\n            } catch (error) {\n                console.log(\"Some error occured=>\", error.message)\n                if (error.message === 'Request failed with status code 409') {\n\n                    toast.error('Sacco with that name already exists')\n                }\n                else {\n                    toast.error('Internal server error')\n                }\n                // resetForm()\n            }\n\n        },\n    });\n\n\n    return (\n        <Layout>\n            <Grid item xs=\"12\">\n                <Breadcrumb parent=\"Saccos\" title=\"Sacco Registration\" />\n            </Grid>\n            <div className={classes.root} style={{ boxShadow: '5px 5px 20px #263238' }}>\n                <Grid container spacing={3} >\n                    <Grid item xs=\"12\">\n                        <form onSubmit={formik.handleSubmit} className={classes.form}>\n                            <Grid container spacing={3}>\n                                <Grid item xs=\"12\" sm=\"6\">\n                                    <TextField\n                                        id=\"name\"\n                                        name=\"name\"\n                                        label=\"NAME\"\n                                        className={classes.textField}\n                                        placeholder=\"Enter sacco name\"\n                                        margin=\"normal\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        value={formik.values.name}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.name && Boolean(formik.errors.name)}\n                                        helperText={formik.touched.name && formik.errors.name}\n                                        autoFocus\n                                    />\n\n                                </Grid>\n                                <Grid item xs=\"12\" sm=\"6\">\n                                    <TextField\n                                        label=\"EMAIL\"\n                                        id=\"email\"\n                                        name=\"email\"\n                                        placeholder=\"Enter sacco email\"\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        size=\"small\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                        value={formik.values.email}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.sacoo_email && Boolean(formik.errors.email)}\n                                        helperText={formik.touched.email && formik.errors.email}\n                                    />\n                                </Grid>\n\n                            </Grid>\n                            <Grid container spacing={3}>\n                                <Grid item xs=\"12\" sm=\"6\">\n                                    <TextField\n                                        label=\"ADMIN NAME\"\n                                        id=\"admin_name\"\n                                        name=\"admin_name\"\n                                        placeholder=\"Enter Admin name\"\n                                        style={{ marginTop: '2.3ch' }}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        size=\"small\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                        value={formik.values.admin_name}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.admin_name && Boolean(formik.errors.admin_name)}\n                                        helperText={formik.touched.admin_name && formik.errors.admin_name}\n                                    />\n                                </Grid>\n                                <Grid item xs=\"12\" sm=\"6\">\n                                    <TextField\n                                        label=\"ADMIN PASSWORD\"\n                                        id=\"admin_password\"\n                                        name=\"admin_password\"\n                                        placeholder=\"Enter Admin password\"\n                                        style={{ marginTop: '2.3ch' }}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        size=\"small\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"outlined\"\n                                        value={formik.values.admin_password}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.admin_password && Boolean(formik.errors.admin_password)}\n                                        helperText={formik.touched.admin_password && formik.errors.admin_password}\n                                    />\n                                </Grid>\n\n                            </Grid>\n                            {/* <Grid container spacing={3}>\n                        <Grid item xs>\n                        <TextField\n                            label=\"INSURANCE COVER\"\n                            id=\"insurance_cover\"\n                            name=\"insurance_cover\"\n                            placeholder=\"Insurance cover\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            size=\"small\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            value={formik.values.insurance_cover}\n                            onChange={formik.handleChange}\n                            error={formik.touched.insurance_cover && Boolean(formik.errors.insurance_cover)}\n                            helperText={formik.touched.insurance_cover && formik.errors.insurance_cover}\n                        />\n                        </Grid>\n                        <Grid item xs>\n                        <TextField\n                            id=\"sacco\"\n                            name=\"sacco\"\n                            select\n                            label=\"Sacco\"\n                            className={classes.textField}\n                            value={saccos}\n                            style={{ marginTop:'1.8ch'}}\n                            SelectProps={{\n                                native: true,\n                            }}\n                            size=\"small\"\n                            value={formik.values.sacco}\n                            onChange={formik.handleChange}\n                            error={formik.touched.sacco && Boolean(formik.errors.sacco)}\n                            helperText={formik.touched.sacco && formik.errors.sacco}\n                            variant=\"outlined\"\n                            >\n                            \n                            {saccos.map((option) => (\n                                <option key={option.value} value={option.value}>\n                                {option.value}\n                                </option>\n                            ))}\n                            \n                        </TextField>\n                        </Grid>\n                    \n                    </Grid> */}\n                            {/* <Button\n                        type=\"button\"\n                        className=\"outline\"\n                        onClick={formik.handleReset}\n                        disabled={!formik.dirty || formik.isSubmitting}\n                    >\n                    Reset\n                    </Button> */}\n                            <Grid container style={{ width: '86%', margin: '0 7%' }}>\n                                <Grid item xs=\"3\"></Grid>\n                                <Grid item xs=\"3\"></Grid>\n                                <Grid item xs=\"3\"></Grid>\n                                <Grid item xs=\"3\">\n\n                                    <div className={classes.div}>\n                                        <Button type=\"submit\" disabled={formik.isSubmitting} size=\"medium\" variant=\"raised\" className={classes.button}>\n                                            Submit\n                            </Button>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </Layout>\n    );\n}\n\nexport default withRouter(SaccoRegistration)"]},"metadata":{},"sourceType":"module"}